[{"name":"app.R","content":"#\n# This is a Shiny web application. You can run the application by clicking\n# the 'Run App' button above.\n#\n# Find out more about building applications with Shiny here:\n#\n#    https://shiny.posit.co/\n#\n\nlibrary(shiny)\n\nlibrary(cranlogs)\nlibrary(ggplot2)\n\n# Define UI for application that draws a histogram\nui <- fluidPage(\n\n    # Application title\n    titlePanel(\"TRES CRAN download dashboard\"),\n\n    # Sidebar with a slider input for number of bins \n    # Show a plot of the generated distribution\n    mainPanel(\n      fluidRow(\n        splitLayout(cellWidths = c(\"33%\", \"33%\", \"34%\"),\n       plotOutput(\"weekPlot\"),\n       plotOutput(\"monthPlot\"),\n       plotOutput(\"longPlot\")))\n    )\n)\n\ncheckPackages <- c(\"GUILDS\", \"nLTT\", \"STEPCAM\",\n                   \"junctions\", \"GenomeAdmixR\", \"nodeSub\", \"simRestore\",\n                   \"treestats\", \n                   \"DAISIE\", \"DAISIEprep\", \"DAISIEmainland\",\n                   \"DAMOCLES\", \"SADISA\",\n                   \"DDD\", \"PBD\", \"secsse\",\n                   \"babette\", \"beautier\", \"tracerer\", \"mauricer\")\n\n# Define server logic required to draw a histogram\nserver <- function(input, output) {\n\n  global <- reactiveValues(data_storage = NULL)\n  \n  week_data <- reactive({\n    cran_downloads(packages = checkPackages, \"last-week\")\n  })\n  \n  month_data <- reactive({\n    cran_downloads(packages = checkPackages, \"last-month\")\n  })\n  \n  long_data <- reactive({\n    cran_downloads(packages = checkPackages, from = \"2010-01-01\", to = lubridate::today())\n  })\n  \n  output$weekPlot <- renderPlot({\n    vz <- week_data()\n    vz %>%\n      group_by(package) %>%\n      arrange(date) %>%\n      mutate(\"cumulative_count\" = cumsum(count)) %>%\n      ggplot(aes(x = date, y = cumulative_count, col = package)) +\n      geom_line(size = 1) +\n      theme_classic() +\n    #  scale_color_brewer(type = \"qual\", palette = 3) +\n      ylab(\"Cumulative number of downloads\") +\n      ggtitle(\"Last week\")\n    })\n  \n  output$monthPlot <- renderPlot({\n    vz <- month_data()\n    vz %>%\n      group_by(package) %>%\n      arrange(date) %>%\n      mutate(\"cumulative_count\" = cumsum(count)) %>%\n      ggplot(aes(x = date, y = cumulative_count, col = package)) +\n      geom_line(size = 1) +\n      theme_classic() +\n      #  scale_color_brewer(type = \"qual\", palette = 3) +\n      ylab(\"Cumulative number of downloads\") +\n      ggtitle(\"Last Month\")\n  })\n  \n  output$longPlot <- renderPlot({\n    vz <- long_data()\n    vz %>%\n      group_by(package) %>%\n      arrange(date) %>%\n      mutate(\"cumulative_count\" = cumsum(count)) %>%\n      ggplot(aes(x = date, y = cumulative_count, col = package)) +\n      geom_line(size = 1) +\n      theme_classic() +\n      #  scale_color_brewer(type = \"qual\", palette = 3) +\n      ylab(\"Cumulative number of downloads\") + \n      ggtitle(\"Long time\")\n  })\n}\n\n# Run the application \nshinyApp(ui = ui, server = server)\n","type":"text"}]
